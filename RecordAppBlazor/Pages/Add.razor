@page "/add"
@using RecordAppBlazor.Function
@using System.IO
@using RecordAppBlazor.Data


<PageTitle>添加录制</PageTitle>

<h1>添加新的录制</h1>

<p role="status" style="color: @statusColor">当前录制状态: @currentRecordingStateString</p>

<h2>注意事项</h2>

<li>添加录制后, 机台的画面连同摄像头将会被录制下来.</li>
<li>每天的每次录制请务必保证设置的密码不同, 以免录制失败</li>
<li>录制为每天机台通电时清空</li>
<li>每天晚上机台断电时, 录制服务将会无法访问. 请提前下载视频</li>
<li>每天晚上 @stopRecordingTime 之后将会停止新增新的录制</li>

<br/>


<input type="text" name="code" class="input is-rounded" placeholder="设定取件码" @bind="codeInput"/><br><br/>

@if (PropertiesManager.Properties.PlayersCanStartRecording)
{
    <button class="button is-primary is-light is-rounded" @onclick="StartRecord">开始录制</button>
}
@if (PropertiesManager.Properties.PlayersCanStopRecording)
{
    <button class="button is-danger is-light is-rounded" @onclick="StopRecording">停止录制</button>
}

<ErrorPromt ErrorMessage="@errorMessage"></ErrorPromt>

@code {
    private bool currentRecordingState;
    private string currentRecordingStateString => currentRecordingState ? "录制中" : "未录制";
    private string errorMessage;
    private string statusColor => currentRecordingState ? "red" : "green";
    private string stopRecordingTime => PropertiesManager.Properties.StopTime.ToLongTimeString();
    
    private string? codeInput;
    
    protected override void OnInitialized()
    {
        currentRecordingState = File.Exists($"{Environment.GetEnvironmentVariable("HOME")}/record.lock");
    }

    private void StartRecord()
    {
        if (currentRecordingState == true)
        {
            errorMessage = "当前已经在录制中, 请勿重复录制";
            return;
        }

        if (string.IsNullOrWhiteSpace(codeInput))
        {
            errorMessage = "取件码不能为空";
        }
        
        var recording = RecordManager.StartRecording(codeInput);
        if (recording == "200")
        {
            currentRecordingState = true;
        }
        else
        {
            errorMessage = recording;
        }
    }

    private void StopRecording()
    {
        if (!currentRecordingState)
        {
            errorMessage = "当前未在录制中";
            return;
        }

        if (string.IsNullOrWhiteSpace(codeInput))
        {
            errorMessage = "取件码不能为空";
        }
        
        var recording = RecordManager.StopRecording(codeInput);
        if (recording == "200")
        {
            currentRecordingState = true;
        }
        else
        {
            errorMessage = recording;
        }
    }
}